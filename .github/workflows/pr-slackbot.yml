name: Slack Notification for PR

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
      - review_requested

jobs:
  notify:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Get PR details
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER")
          
          REVIEWERS=$(echo "$response" | jq -r '.requested_reviewers | map(.login) | join(",")')
          AUTHOR=$(echo "$response" | jq -r '.user.login')
          echo "REVIEWERS=${REVIEWERS}" >> $GITHUB_ENV
          echo "AUTHOR=${AUTHOR}" >> $GITHUB_ENV

      - name: Prepare Slack Tags
        id: prepare_message
        run: |
          SLACK_USERS='${{ vars.SLACK_USER_MAPPING }}'
          REVIEWERS=${{ env.REVIEWERS }}
          AUTHOR=${{ env.AUTHOR }}
          
          SLACK_REVIEWER_TAGS=""
          for REVIEWER in $(echo "$REVIEWERS" | tr ',' ' '); do
            SLACK_ID=$(echo "$SLACK_USERS" | jq -r --arg user "$REVIEWER" '.[$user]')
            if [[ "$SLACK_ID" != "null" ]]; then
              SLACK_REVIEWER_TAGS+="<@$SLACK_ID> "
            fi
          done

          AUTHOR_SLACK_ID=$(echo "$SLACK_USERS" | jq -r --arg user "$AUTHOR" '.[$user]')
          SLACK_AUTHOR_TAG=""
          if [[ "$AUTHOR_SLACK_ID" != "null" ]]; then
            SLACK_AUTHOR_TAG="<@$AUTHOR_SLACK_ID>"
          fi
          
          echo "SLACK_REVIEWER_TAGS=${SLACK_REVIEWER_TAGS}" >> $GITHUB_ENV
          echo "SLACK_AUTHOR_TAG=${SLACK_AUTHOR_TAG}" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo, pullRequest, author
          text: "A new pull request has been raised by ${{ env.SLACK_AUTHOR_TAG }}.:tada:\n${{ env.SLACK_REVIEWER_TAGS }}!"
          author_name: "PR Bot ⚡️"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
