name: Slack Notification for PR

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
      - review_requested

jobs:

  notify:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Get PR details
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER")
          
          # Extract requested reviewers
          REVIEWERS=$(echo "$response" | jq -r '.requested_reviewers | map(.login) | join(",")')
          echo "Reviewers: $REVIEWERS"
          echo "REVIEWERS=${REVIEWERS}" >> $GITHUB_ENV

      - name: Load Slack User Mapping
        id: slack_user_mapping
        run: |
          echo '{
            "arch1tek": "U07CKPA8C4B"
          }' > slack_users.json
          echo "::set-output name=slack_users::$(cat slack_users.json | jq -c .)"

      - name: Prepare Slack Message
        id: prepare_message
        run: |
          SLACK_USERS=$(echo "${{ steps.slack_user_mapping.outputs.slack_users }}" | jq -r 'to_entries | map("\(.key)=\(.value)") | join(",")')
          declare -A user_map
          IFS=',' read -r -a pairs <<< "$SLACK_USERS"
          for pair in "${pairs[@]}"; do
            IFS='=' read -r key value <<< "$pair"
            user_map["$key"]="$value"
          done
          
          IFS=',' read -r -a REVIEWER_ARRAY <<< "$REVIEWERS"
          SLACK_TAGS=""
          for REVIEWER in "${REVIEWER_ARRAY[@]}"; do
            if [[ -n "${user_map[$REVIEWER]}" ]]; then
              SLACK_TAGS+="<@${user_map[$REVIEWER]}> "
            fi
          done
          echo "SLACK_TAGS=${SLACK_TAGS}" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          fields: repo, pullRequest, author
          text: "A new pull request has been created with reviewers: $SLACK_TAGS! :tada:"
          author_name: "PR Bot ⚡️"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
